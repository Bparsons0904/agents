[workflow]
max_total_iterations = 12
timeout_minutes = 20

[agents.engineering_manager]
role = "engineering_manager"
model = "qwen2.5-coder:14b-instruct-q6_K"
max_iterations = 4
tools = ["read_file", "write_file", "execute_command", "git_status", "git_log", "git_diff", "list_files", "find_files", "sequential_thinking"]

[agents.senior_engineer]
role = "senior_engineer" 
model = "qwen2.5-coder:14b-instruct-q6_K"
max_iterations = 5
tools = ["read_file", "write_file", "execute_command", "git_diff", "list_files", "find_files", "sequential_thinking"]

[agents.senior_qa]
role = "senior_qa"
model = "qwen2.5-coder:14b-instruct-q6_K" 
max_iterations = 2
tools = ["read_file", "write_file", "execute_command", "git_diff", "list_files", "find_files", "sequential_thinking"]

[agents.senior_tech_lead]
role = "senior_tech_lead"
model = "qwen2.5-coder:14b-instruct-q6_K"
max_iterations = 3
tools = ["read_file", "write_file", "execute_command", "git_diff", "list_files", "find_files", "sequential_thinking"]

# Enhanced command allowlist for project management and self-recovery
[commands]
allowed = [
    # Go commands - Enhanced for project setup with fallback strategies
    "go build", "go test", "go fmt", "go vet", "go mod tidy", "go run",
    "go build ./...", "go test ./...", "go mod download", "go mod init",
    "go build .", "go test .", "go clean", "go env", "go get",
    "go build -o", "go mod init *", "go work init",
    
    # Go mod edit commands - Essential for fixing module declarations
    "go mod edit", "go mod edit -module", "go mod edit -module=*",
    "go mod edit -go=*", "go mod edit -require=*", "go mod edit -droprequire=*",
    "go mod edit -replace=*", "go mod edit -dropreplace=*",
    
    # Additional Go dependency management commands
    "go get -u", "go get -u all", "go get ./...", "go list", "go list -m all",
    "go mod why", "go mod graph", "go mod verify", "go version",
    
    # Build fallback strategies for common issues
    "go build -buildvcs=false .", "go build -buildvcs=false ./...",
    "go build -mod=readonly .", "go build -mod=vendor .", "go build -mod=mod .",
    "go clean -modcache", "go mod tidy -go=1.23", "go env GOPROXY",
    
    # Progressive validation commands
    "go fmt -n .", "go vet -n .", "gofmt -l .", "gofmt -w .",
    
    # Node.js commands  
    "npm install", "npm run build", "npm test", "npm run dev",
    "npm ci", "yarn install", "yarn build", "yarn test",
    "npm run lint", "npm audit", "npm init -y",
    
    # Python commands
    "python -m pytest", "python -m pip install", "python setup.py",
    "pip install", "pytest", "python -m venv",
    "python -m flake8", "python -m black --check",
    
    # Build tools
    "make", "make build", "make test", "make clean",
    
    # Git operations - Enhanced for project management
    "git add", "git status", "git diff", "git log --oneline -10",
    "git log --oneline", "git show", "git branch", "git init",
    "git add .", "git reset", "git clean -fd", "git stash",
    
    # File operations - Enhanced for project cleanup and organization
    "ls", "ls -la", "ls -l", "cat", "head", "tail", "find", "grep",
    "mkdir", "mkdir -p", "touch", "cp", "cp -r", "mv", "rm", "rm -f",
    "rmdir", "pwd", "basename", "dirname",
    # Safe recursive removal - ONLY in working directory paths
    "rm -rf ./", "rm -rf ./*", "rm -rf */", "rm -rf *.go", "rm -rf *.js", "rm -rf *.py",
    
    # Directory navigation and management
    "cd", "pushd", "popd",
    
    # Text processing for cleanup
    "sed", "awk", "sort", "uniq", "wc", "tr",
    
    # Process and system info (safe commands)
    "ps", "which", "whoami", "id", "uname", "env"
]

[restrictions]
blocked_patterns = [
    "sudo", "chmod +x", "systemctl", 
    "iptables", "mount", "cd /", "cat /etc/",
    "passwd", "usermod", "userdel", "groupmod",
    "service", "systemd", "crontab", "at",
    "wget", "curl http", "curl https", "ssh",
    "scp", "rsync", "dd", "fdisk", "mkfs",
    "chown", "chgrp", "umount", "kill -9",
    # Dangerous rm patterns - block absolute paths and system dirs
    "rm -rf /", "rm -rf /*", "rm -rf ~", "rm -rf /usr", "rm -rf /etc",
    "rm -rf /var", "rm -rf /opt", "rm -rf /home", "rm -rf /root",
    "rm -rf /bin", "rm -rf /sbin", "rm -rf /lib", "rm -rf /boot"
]